# ServerProperties
server.port=8080
server.servlet.context-path=/community
# ThymeleafProperties 关掉缓存
# 给一个配置类注入数据 写spring.thymeleaf 其实引用的是ThymeleafProperties类  从手册上可以找到
spring.thymeleaf.cache=false

# DataSourceProperties
# 配置MYSQL引擎和连接池（数据源）
# 1、连接池是用来管理链接的工厂，可以统一初始化连接可以反复使用  2、可以设置访问数据库的上限，防止崩溃
# 数据库驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=zzy12345
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#连接池的最大连接数
spring.datasource.hikari.maximum-pool-size=15
#最小空闲连接
spring.datasource.hikari.minimum-idle=5
#超时时间 连接池空闲30000才确定关闭
spring.datasource.hikari.idle-timeout=30000


# MybatisProperties
# 映射文件 xml（写sql的文件）的存放位置
mybatis.mapper-locations=classpath:mapper/*.xml
#entity 这是个实体类 是为了封装表里的数据
mybatis.type-aliases-package=com.newcoder.community.entity
# 启用自生成组件，insert的时候id做到自增长
mybatis.configuration.useGeneratedKeys=true
# 下划线的命名方式和驼峰命名方式相同
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger配置日志
#logging.level.com.newcoder.community=debug
#logging.file.name=d:/work/data/newcoder/comunity.log